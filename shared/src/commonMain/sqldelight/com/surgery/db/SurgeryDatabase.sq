import kotlin.Boolean;
import kotlin.Int;

CREATE TABLE IF NOT EXISTS ProcedureEntity (
    uuid TEXT PRIMARY KEY NOT NULL,
    name TEXT NOT NULL,
    icon TEXT NOT NULL,
    phasesCount INTEGER AS Int NOT NULL,
    duration INTEGER AS Int NOT NULL,
    creationDate TEXT NOT NULL,
    isFavorite INTEGER AS Boolean NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS PhaseEntity (
    uuid TEXT PRIMARY KEY NOT NULL,
    procedureUuid TEXT NOT NULL REFERENCES ProcedureEntity(uuid) ON DELETE CASCADE,
    name TEXT NOT NULL,
    icon TEXT NOT NULL
);

selectAllProcedures:
SELECT * FROM ProcedureEntity;

searchProcedures:
SELECT * FROM ProcedureEntity WHERE name LIKE ?;

insertProcedure:
INSERT INTO ProcedureEntity (uuid, name, icon, phasesCount, duration, creationDate, isFavorite)
VALUES (?, ?, ?, ?, ?, ?, ?);

selectPhasesForProcedure:
SELECT * FROM PhaseEntity WHERE procedureUuid = ?;

insertPhase:
INSERT INTO PhaseEntity (uuid, procedureUuid, name, icon)
VALUES (?, ?, ?, ?);

deletePhasesForProcedure:
DELETE FROM PhaseEntity WHERE procedureUuid = ?;

deleteAllProcedures:
DELETE FROM ProcedureEntity;

updateProcedureFavorite:
UPDATE ProcedureEntity SET isFavorite = ? WHERE uuid = ?;

selectFavoriteProcedureUuid:
SELECT uuid FROM ProcedureEntity WHERE isFavorite = 1;

selectFavoriteProcedure:
SELECT * FROM ProcedureEntity WHERE isFavorite = 1;

searchsFavoriteProcedure:
SELECT * FROM ProcedureEntity WHERE name LIKE ? AND isFavorite = 1;
